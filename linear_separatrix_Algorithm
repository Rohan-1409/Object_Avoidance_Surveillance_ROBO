import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import requests
data = pd.read_csv('./mobrobo.csv')
data.columns
data.shape
data
yd=data[['vl','vr']]/100
print(yd)
s=data['X']/100 #X
print(s)
#createA
d=3
#N=data.shape[0]
#W calculate
#predict_y
#mse
def createA(s,D):
 N = s.shape[0]
 A = np.ones((N,D+1))
 for D in range(1,D+1): 
   A[:,D] = np.power(s,D)
 return A
def train_w(A, yd):
     N = yd.shape[0]
    D = 3
    if N>D+1:
      w = np.linalg.inv(A.T.dot(A)).dot(A.T).dot(yd)  # Least sq sol
    elif N<=D+1:
      w = A.T.dot(np.linalg.inv(A.dot(A.T))).dot(yd)  # Min-norm; add 0.00000001*np.eye(A.shape[0])
return w
A=createA(s,d)
print(train_w(A,yd))
def predict_y(w, s):
    D = w.shape[0]-1
    A = createA(s, D)
    y = A.dot(w)
    return y
w=train_w(A, yd)
from sklearn.metrics import mean_squared_error
mse=mean_squared_error(yd,predict_y(w,s))
print(mse)
